version: "3.8"
name: vokraf-backend

networks:
  rabbitmq_nodejs:
    driver: bridge # This is the default

services:
  # api gateway
  api-gateway-consumer:
    build:
      context: ../apps/api-gateway-consumer
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    env_file:
      - ../apps/api-gateway-consumer/.env.local
    ports:
      - 3000:3000
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  api-gateway-learning:
    build:
      context: ../apps/api-gateway-learning
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    env_file:
      - ../apps/api-gateway-learning/.env.local
    ports:
      - 3001:3001
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  # services
  blog-service:
    build:
      context: ../apps/blog-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@blog-db:5432/blog
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - blog-db
    networks:
      - rabbitmq_nodejs

  certificate-service:
    build:
      context: ../apps/certificate-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@certificate-db:5432/certificate
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - certificate-db
    networks:
      - rabbitmq_nodejs

  course-service:
    build:
      context: ../apps/course-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@course-db:5432/course
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - course-db
    networks:
      - rabbitmq_nodejs

  learning-service:
    build:
      context: ../apps/learning-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@learning-db:5432/learning
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - learning-db
    networks:
      - rabbitmq_nodejs

  marketplace-service:
    build:
      context: ../apps/marketplace-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@marketplace-db:5432/marketplace
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - marketplace-db
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  messaging-service:
    build:
      context: ../apps/messaging-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@messaging-db:5432/messaging
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - messaging-db
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  otp-service:
    build:
      context: ../apps/otp-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@otp-db:5432/otp
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - otp-db
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  prakerja-service:
    build:
      context: ../apps/prakerja-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@prakerja-db:5432/prakerja
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - prakerja-db
      - rabbitmq
    networks:
      - rabbitmq_nodejs

  transaction-service:
    build:
      context: ../apps/transaction-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@transaction-db:5432/transaction
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - transaction-db
    networks:
      - rabbitmq_nodejs

  user-service:
    build:
      context: ../apps/user-service
      dockerfile: ./Dockerfile
      target: development
    command: pnpm run start:dev
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@user-db:5432/user
      - RABBITMQ_URL=amqp://rabbitmq:5672
    depends_on:
      - rabbitmq
      - user-db
    networks:
      - rabbitmq_nodejs

  #database

  blog-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=blog
    ports:
      - 5441:5432
    networks:
      - rabbitmq_nodejs

  certificate-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=certificate
    ports:
      - 5442:5432
    networks:
      - rabbitmq_nodejs

  course-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=course
    ports:
      - 5443:5432
    networks:
      - rabbitmq_nodejs

  learning-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=learning
    ports:
      - 5444:5432
    networks:
      - rabbitmq_nodejs

  marketplace-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=marketplace
    ports:
      - 5445:5432
    networks:
      - rabbitmq_nodejs

  messaging-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=messaging
    ports:
      - 5446:5432
    networks:
      - rabbitmq_nodejs

  otp-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=otp
    ports:
      - 5447:5432
    networks:
      - rabbitmq_nodejs

  prakerja-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=prakerja
    ports:
      - 5448:5432
    networks:
      - rabbitmq_nodejs

  transaction-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=transaction
    ports:
      - 5449:5432
    networks:
      - rabbitmq_nodejs

  user-db:
    image: postgres:latest
    restart: always
    shm_size: 128mb
    volumes:
      - ./docker-postgresql-multiple-databases:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user
    ports:
      - 5450:5432
    networks:
      - rabbitmq_nodejs

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5673:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_nodejs
